from pathlib import Path
from snakemake.utils import min_version

min_version("7.20")


configfile: "config/static.yml"


# required to get snakemake to properly depickle a pydantic model
sys.path.extend(["./workflow/scripts/python"])
from common.config import GiabStrats

config = GiabStrats.parse_obj(config)


wildcard_constraints:
    # permit alphanumerics and dashes only, underscores will be used for
    # separation in filepaths; this convention makes it impossible for
    # wildcards to be ambiguous
    ref_key="[A-Za-z0-9-]+",
    build_key="[A-Za-z0-9-]+",
    # this appears way too often, so define constraint here
    sex_chr="[XY]",


include: "rules/repseq.smk"
include: "rules/ref.smk"
include: "rules/xy.smk"
include: "rules/low_complexity.smk"
include: "rules/gc.smk"
include: "rules/functional.smk"
include: "rules/segdups.smk"
include: "rules/other.smk"
include: "rules/mappability.smk"
include: "rules/union.smk"
include: "rules/postprocess.smk"


# rule to download stuff to make testing pipeline faster (this only includes
# the big stuff, like .fa files and large bed files)
rule all_resources:
    input:
        expand(rules.download_ref.output, ref_key=config.all_refkeys),
        expand(rules.download_gaps.output, ref_key=config.all_refkey_gap),
        expand(
            rules.download_rmsk.output + rules.download_trf.output,
            ref_key=config.all_refkey_rmsk_trf,
        ),
        expand(rules.download_censat.output, ref_key=config.all_refkey_censat),
        expand(
            rules.download_ftbl.output + rules.download_gff.output,
            ref_key=config.all_refkey_functional,
        ),
        expand(rules.download_superdups.output, ref_key=config.all_refkey_segdups),


rule all:
    input:
        rules.validate_strats.output,
        rules.summarize_happy.output,
        [
            expand(
                rules.generate_md5sums.output + rules.generate_tsv_list.output,
                ref_key=rk,
                build_key=bk,
            )
            for rk, r in config.stratifications.items()
            for bk in r.builds
        ],
